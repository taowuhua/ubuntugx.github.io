<!DOCTYPE html><html><head><title>20151228</title><meta charset='utf-8'><link href='https://dn-maxiang.qbox.me/res-min/themes/marxico.css' rel='stylesheet'><style></style></head><body><div id='preview-contents' class='note-content'>
                        <div id="wmd-preview" class="preview-content"></div>
                    <div id="wmd-preview-section-1" class="wmd-preview-section preview-content">

</div><div id="wmd-preview-section-636" class="wmd-preview-section preview-content">

<h1 id="20151228">20151228</h1>

<p></p></div><div id="wmd-preview-section-45" class="wmd-preview-section preview-content">

<h2 id="iscroll-用法"><strong>IScroll 用法</strong></h2>

</div><div id="wmd-preview-section-158" class="wmd-preview-section preview-content">

<pre class="prettyprint hljs-dark"><code class="language-javascript hljs"><span class="hljs-comment line-number">1.</span><span class="hljs-comment">// iScroll还提供了scrollTo, scrollToElement和scrollToPage三个方法让你能够通过javascript来控制滚动效果。</span><br><span class="hljs-comment line-number">2.</span><br><span class="hljs-comment line-number">3.</span>scrollTo(x, y, time, relative)<br><span class="hljs-comment line-number">4.</span><span class="hljs-comment">// 在指定的time时间内让内容滚动条x/y的位置。如myScroll.scrollTo(0, -100, 200) 在200毫秒内Y轴向下滚动100像素。 myScroll.scrollTo(0, 10, 200, true)可以实现相对当前位置在200毫秒内Y轴向上滚动10像素的效果。</span><br><span class="hljs-comment line-number">5.</span><br><span class="hljs-comment line-number">6.</span>scrollToElement(element, time)<br><span class="hljs-comment line-number">7.</span><span class="hljs-comment">// 在指定的时间内滚动到指定的元素。如myScroll.scrollToElement('li:nth-child(10)', 100) 在100毫秒内滚动到第10个li元素的位置。第1个参数可以用CSS3中的选择器来筛选元素。</span><br><span class="hljs-comment line-number">8.</span><br><span class="hljs-comment line-number">9.</span>snapToPage(pageX, pageY, time)<br><span class="hljs-comment line-number">10.</span><span class="hljs-comment">// 在200毫秒内从第1页滚动到第2页（0代表第1页，1代表第2页）。这个使用SNAP功能的时候可以调用这个函数。</span><br></code></pre>

</div><div id="wmd-preview-section-234" class="wmd-preview-section preview-content">

<h2 id="mathrandom">Math.Random()</h2>

</div><div id="wmd-preview-section-577" class="wmd-preview-section preview-content">

<pre class="prettyprint hljs-dark"><code class="language-javascript hljs"><span class="hljs-comment line-number">1.</span><span class="hljs-comment">// 返回一个介于min和max之间的随机数</span><br><span class="hljs-comment line-number">2.</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getRandomArbitrary</span>(<span class="hljs-params">min, max</span>) </span>{<br><span class="hljs-comment line-number">3.</span>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.random() * (max - min) + min;<br><span class="hljs-comment line-number">4.</span>}<br><span class="hljs-comment line-number">5.</span><span class="hljs-comment">// 返回一个介于min和max之间的整型随机数</span><br><span class="hljs-comment line-number">6.</span><span class="hljs-comment">// Using Math.round() will give you a non-uniform distribution!</span><br><span class="hljs-comment line-number">7.</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getRandomInt</span>(<span class="hljs-params">min, max</span>) </span>{<br><span class="hljs-comment line-number">8.</span>  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (max - min + <span class="hljs-number">1</span>) + min);<br><span class="hljs-comment line-number">9.</span>}<br></code></pre>

</div><div id="wmd-preview-section-704" class="wmd-preview-section preview-content">

<h2 id="missing-number">missing number</h2>

<blockquote>
  <p>from a unsorted array of numbers 1 to 100 excluding one number, how will you find that number.</p>
</blockquote>

</div><div id="wmd-preview-section-1065" class="wmd-preview-section preview-content">

<pre class="prettyprint hljs-dark"><code class="language-javascript hljs"><span class="hljs-comment line-number">1.</span><span class="hljs-comment">// 用等差数列求出和，减去所给ouy数列之和，得出丢失的数</span><br><span class="hljs-comment line-number">2.</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">missingNumber</span>(<span class="hljs-params">arr</span>)</span>{<br><span class="hljs-comment line-number">3.</span>  <span class="hljs-keyword">var</span> n = arr.length+<span class="hljs-number">1</span>, <br><span class="hljs-comment line-number">4.</span>  sum = <span class="hljs-number">0</span>,<br><span class="hljs-comment line-number">5.</span>  expectedSum = n* (n+<span class="hljs-number">1</span>)/<span class="hljs-number">2</span>;<br><span class="hljs-comment line-number">6.</span><br><span class="hljs-comment line-number">7.</span>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>, len = arr.length; i &lt; len; i++){<br><span class="hljs-comment line-number">8.</span>    sum += arr[i];<br><span class="hljs-comment line-number">9.</span>  }<br><span class="hljs-comment line-number">10.</span>  <span class="hljs-keyword">return</span> expectedSum - sum;<br><span class="hljs-comment line-number">11.</span>}<br><span class="hljs-comment line-number">12.</span>&gt; missingNumber([<span class="hljs-number">5</span>, <span class="hljs-number">2</span>, <span class="hljs-number">6</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>]);<br><span class="hljs-comment line-number">13.</span>  = <span class="hljs-number">4</span><br></code></pre></div><div id="wmd-preview-section-footnotes" class="preview-content"></div></div></body></html>
